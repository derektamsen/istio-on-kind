apiVersion: v1
data:
  alerting_rules.yml: |
    {}
  alerts: |
    {}
  prometheus.yml: |
    global:
      evaluation_interval: 1m
      scrape_interval: 15s
      scrape_timeout: 10s
    rule_files:
    - /etc/config/recording_rules.yml
    - /etc/config/alerting_rules.yml
    - /etc/config/rules
    - /etc/config/alerts
    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets:
        - localhost:9090
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-apiservers
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: default;kubernetes;https
        source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_service_name
        - __meta_kubernetes_endpoint_port_name
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      job_name: kubernetes-nodes-cadvisor
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - replacement: kubernetes.default.svc:443
        target_label: __address__
      - regex: (.+)
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        source_labels:
        - __meta_kubernetes_node_name
        target_label: __metrics_path__
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
    - job_name: kubernetes-service-endpoints-slow
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
      - action: replace
        regex: (https?)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_scheme
        target_label: __scheme__
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_service_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_node_name
        target_label: kubernetes_node
      scrape_interval: 5m
      scrape_timeout: 30s
    - honor_labels: true
      job_name: prometheus-pushgateway
      kubernetes_sd_configs:
      - role: service
      relabel_configs:
      - action: keep
        regex: pushgateway
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
    - job_name: kubernetes-services
      kubernetes_sd_configs:
      - role: service
      metrics_path: /probe
      params:
        module:
        - http_2xx
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_service_annotation_prometheus_io_probe
      - source_labels:
        - __address__
        target_label: __param_target
      - replacement: blackbox
        target_label: __address__
      - source_labels:
        - __param_target
        target_label: instance
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - source_labels:
        - __meta_kubernetes_service_name
        target_label: kubernetes_name
    - job_name: kubernetes-pods
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
      - action: drop
        regex: Pending|Succeeded|Failed
        source_labels:
        - __meta_kubernetes_pod_phase
    - job_name: kubernetes-pods-slow
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - action: keep
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
      - action: replace
        regex: (.+)
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_path
        target_label: __metrics_path__
      - action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: replace
        source_labels:
        - __meta_kubernetes_namespace
        target_label: kubernetes_namespace
      - action: replace
        source_labels:
        - __meta_kubernetes_pod_name
        target_label: kubernetes_pod_name
      - action: drop
        regex: Pending|Succeeded|Failed
        source_labels:
        - __meta_kubernetes_pod_phase
      scrape_interval: 5m
      scrape_timeout: 30s
    # 1.5 istio
    # Scrape config for envoy stats
    - job_name: 'envoy-stats'
      metrics_path: /stats/prometheus
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: '.*-envoy-prom'
      - action: drop # Avoid duplicate
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:15090
        target_label: __address__
      - action: labelmap # TODO: It was labeldrop - forward-compatibility
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace # TODO: it was just namespace - forward compatibility
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name # TODO: it was just pod_name - forward compatibility
      - action: drop # TODO: From forward compatibility
        regex: Pending|Succeeded|Failed
        source_labels:
        - __meta_kubernetes_pod_phase
      - action: replace # TODO: proper name for instance # Duplicate of kubernetes_pod_name
        source_labels: [__meta_kubernetes_pod_name]
        target_label: instance
    - job_name: 'pilot'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-pilot;http-monitoring
      - action: drop # Avoid duplicate
        regex: true
        source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
      - action: labelmap # TODO: It was labeldrop - forward-compatibility
        regex: __meta_kubernetes_pod_label_(.+)
      - action: labelmap # TODO: It was labeldrop - forward-compatibility
        regex: __meta_kubernetes_service_label_(.+)
      - action: replace # TODO: proper name for instance
        source_labels: [__meta_kubernetes_endpoint_address_target_name]
        target_label: instance
  recording_rules.yml: |
    # https://istio.io/latest/docs/ops/best-practices/observability/#using-prometheus-for-production-scale-monitoring
    # https://karlstoney.com/2020/02/25/federated-prometheus-to-reduce-metric-cardinality/
    # https://gist.github.com/Stono/9ad07fca8c447c3ee3ac2c8a546d8acf
    groups:
      # These sum(irate()) functions are in separate groups, so they run in parallel
    - name: istio.workload.istio_request_duration_milliseconds_bucket
      interval: 30s
      rules:
      - record: workload:istio_request_duration_milliseconds_bucket:rate1m
        expr: |
          sum(irate(istio_request_duration_milliseconds_bucket{reporter="source", source_workload!=""}[1m]))
          by (
            source_workload,
            source_workload_namespace,
            destination_service,
            destination_workload,
            destination_workload_namespace,
            le
          )
    - name: istio.workload.istio_request_bytes_bucket
      interval: 30s
      rules:
      - record: workload:istio_request_bytes_bucket:rate1m
        expr: |
          sum(irate(istio_request_bytes_bucket{reporter="source", source_workload!=""}[1m]))
          by (
            source_workload,
            source_workload_namespace,
            destination_service,
            destination_workload,
            destination_workload_namespace,
            le
          )
    - name: istio.workload.istio_response_bytes_bucket
      interval: 30s
      rules:
      - record: workload:istio_response_bytes_bucket:rate1m
        expr: |
          sum(irate(istio_response_bytes_bucket{reporter="source", source_workload!=""}[1m]))
          by (
            source_workload,
            source_workload_namespace,
            destination_service,
            destination_workload,
            destination_workload_namespace,
            le
          )
    - name: istio.workload.istio_requests_total
      interval: 30s
      rules:
      - record: workload:istio_requests_total:rate1m
        expr: |
          sum(irate(istio_requests_total{reporter="source", source_workload!=""}[1m]))
          by (
            source_workload,
            source_workload_namespace,
            destination_service,
            destination_workload,
            destination_workload_namespace,
            response_code,
            response_flags
          )
    # These rules should be fast, and only operate on the aggregates defined above
    - name: istio.recording-rules-percentiles
      interval: 30s
      rules:
      - record: istio:istio_request_duration_milliseconds_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              workload:istio_request_duration_milliseconds_bucket:rate1m
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              workload:istio_request_duration_milliseconds_bucket:rate1m
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              workload:istio_request_duration_milliseconds_bucket:rate1m
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              workload:istio_request_duration_milliseconds_bucket:rate1m
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_request_duration_milliseconds_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              sum(workload:istio_request_duration_milliseconds_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              workload:istio_request_bytes_bucket:rate1m
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              workload:istio_request_bytes_bucket:rate1m
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              workload:istio_request_bytes_bucket:rate1m
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              workload:istio_request_bytes_bucket:rate1m
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_request_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              sum(workload:istio_request_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              workload:istio_response_bytes_bucket:rate1m
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.50,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "50", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              workload:istio_response_bytes_bucket:rate1m
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.90,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "90", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              workload:istio_response_bytes_bucket:rate1m
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.95,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "95", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              workload:istio_response_bytes_bucket:rate1m
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:source:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                source_workload,
                source_workload_namespace,
                le
              )
            )
          , "percentile", "99", "source_workload", ".*")
      - record: istio:istio_response_bytes_bucket:destination:rate1m
        expr: |
          label_replace(
            histogram_quantile(0.99,
              sum(workload:istio_response_bytes_bucket:rate1m)
              by (
                destination_service,
                destination_workload,
                destination_workload_namespace,
                le
              )
            )
          , "percentile", "99", "source_workload", ".*")
  rules: |
    {}
kind: ConfigMap
metadata:
  annotations:
  labels:
    app: prometheus
    chart: prometheus-11.16.2
    component: server
    heritage: Helm
    release: prometheus
  name: prometheus
  namespace: istio-system
